"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[938],{1680:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var t=s(4848),a=s(8453);const i={sidebar_label:"load_poses",title:"io.load_poses"},o=void 0,r={id:"reference/io/load_poses",title:"io.load_poses",description:"load\\pose\\estimation",source:"@site/docs/reference/io/load_poses.md",sourceDirName:"reference/io",slug:"/reference/io/load_poses",permalink:"/VAME/docs/reference/io/load_poses",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"load_poses",title:"io.load_poses"},sidebar:"docsSidebar",previous:{title:"new",permalink:"/VAME/docs/reference/initialize_project/new"},next:{title:"nwb",permalink:"/VAME/docs/reference/io/nwb"}},d={},l=[{value:"load_pose_estimation",id:"load_pose_estimation",level:4},{value:"load_vame_dataset",id:"load_vame_dataset",level:4},{value:"nc_to_dataframe",id:"nc_to_dataframe",level:4},{value:"read_pose_estimation_file",id:"read_pose_estimation_file",level:4}];function c(e){const n={code:"code",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h4,{id:"load_pose_estimation",children:"load_pose_estimation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def load_pose_estimation(\n    pose_estimation_file: Path | str, video_file: Path | str, fps: int,\n    source_software: Literal["DeepLabCut", "SLEAP", "LightningPose"]\n) -> xr.Dataset\n'})}),"\n",(0,t.jsx)(n.p,{children:"Load pose estimation data."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"pose_estimation_file"})," (",(0,t.jsx)(n.code,{children:"Path or str"}),"): Path to the pose estimation file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"video_file"})," (",(0,t.jsx)(n.code,{children:"Path or str"}),"): Path to the video file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"fps"})," (",(0,t.jsx)(n.code,{children:"int"}),"): Sampling rate of the video."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"source_software"})," (",(0,t.jsx)(n.code,{children:'Literal["DeepLabCut", "SLEAP", "LightningPose"]'}),"): Source software used for pose estimation."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ds"})," (",(0,t.jsx)(n.code,{children:"xarray.Dataset"}),"): Pose estimation dataset."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"load_vame_dataset",children:"load_vame_dataset"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def load_vame_dataset(ds_path: Path | str) -> xr.Dataset\n"})}),"\n",(0,t.jsx)(n.p,{children:"Load VAME dataset."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ds_path"})," (",(0,t.jsx)(n.code,{children:"Path or str"}),"): Path to the netCDF dataset."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"xr.Dataset"}),": VAME dataset"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"nc_to_dataframe",children:"nc_to_dataframe"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def nc_to_dataframe(nc_data)\n"})}),"\n",(0,t.jsx)(n.h4,{id:"read_pose_estimation_file",children:"read_pose_estimation_file"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def read_pose_estimation_file(\n    file_path: str,\n    file_type: Optional[PoseEstimationFiletype] = None,\n    path_to_pose_nwb_series_data: Optional[str] = None\n) -> Tuple[pd.DataFrame, np.ndarray, xr.Dataset]\n"})}),"\n",(0,t.jsx)(n.p,{children:"Read pose estimation file."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"file_path"})," (",(0,t.jsx)(n.code,{children:"str"}),"): Path to the pose estimation file."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"file_type"})," (",(0,t.jsx)(n.code,{children:"PoseEstimationFiletype"}),"): Type of the pose estimation file. Supported types are 'csv' and 'nwb'."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"path_to_pose_nwb_series_data"})," (",(0,t.jsx)(n.code,{children:"str, optional"}),"): Path to the pose data inside the nwb file, by default None"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Returns"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Tuple[pd.DataFrame, np.ndarray]"}),": Tuple containing the pose estimation data as a pandas DataFrame and a numpy array."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(6540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);