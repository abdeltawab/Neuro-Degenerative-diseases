"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3944],{4551:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});var i=s(4848),o=s(8453);const l={sidebar_label:"videowriter",title:"analysis.videowriter"},r=void 0,t={id:"reference/analysis/videowriter",title:"analysis.videowriter",description:"logger\\_config",source:"@site/docs/reference/analysis/videowriter.md",sourceDirName:"reference/analysis",slug:"/reference/analysis/videowriter",permalink:"/VAME/docs/reference/analysis/videowriter",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"videowriter",title:"analysis.videowriter"},sidebar:"docsSidebar",previous:{title:"umap",permalink:"/VAME/docs/reference/analysis/umap"},next:{title:"new",permalink:"/VAME/docs/reference/initialize_project/new"}},c={},d=[{value:"logger_config",id:"logger_config",level:4},{value:"logger",id:"logger",level:4},{value:"create_cluster_videos",id:"create_cluster_videos",level:4},{value:"motif_videos",id:"motif_videos",level:4},{value:"community_videos",id:"community_videos",level:4}];function a(e){const n={code:"code",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h4,{id:"logger_config",children:"logger_config"}),"\n",(0,i.jsx)(n.h4,{id:"logger",children:"logger"}),"\n",(0,i.jsx)(n.h4,{id:"create_cluster_videos",children:"create_cluster_videos"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def create_cluster_videos(\n        config: dict,\n        path_to_file: str,\n        session: str,\n        n_clusters: int,\n        video_type: str,\n        flag: str,\n        segmentation_algorithm: SegmentationAlgorithms,\n        cohort: bool = True,\n        output_video_type: str = ".mp4",\n        tqdm_logger_stream: Union[TqdmToLogger, None] = None) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Generate cluster videos and save them to filesystem on project folder."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"config"})," (",(0,i.jsx)(n.code,{children:"dict"}),"): Configuration parameters."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"path_to_file"})," (",(0,i.jsx)(n.code,{children:"str"}),"): Path to the file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"session"})," (",(0,i.jsx)(n.code,{children:"str"}),"): Name of the session."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"n_clusters"})," (",(0,i.jsx)(n.code,{children:"int"}),"): Number of clusters."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"video_type"})," (",(0,i.jsx)(n.code,{children:"str"}),"): Type of input video."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"flag"})," (",(0,i.jsx)(n.code,{children:"str"}),"): Flag indicating the type of video (motif or community)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"segmentation_algorithm"})," (",(0,i.jsx)(n.code,{children:"SegmentationAlgorithms"}),"): Which segmentation algorithm to use. Options are 'hmm' or 'kmeans'."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"cohort"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Flag indicating cohort analysis. Defaults to True."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"output_video_type"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),"): Type of output video. Default is '.mp4'."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"tqdm_logger_stream"})," (",(0,i.jsx)(n.code,{children:"TqdmToLogger, optional"}),"): Tqdm logger stream. Default is None."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"motif_videos",children:"motif_videos"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@save_state(model=MotifVideosFunctionSchema)\ndef motif_videos(config: dict,\n                 segmentation_algorithm: SegmentationAlgorithms,\n                 video_type: str = ".mp4",\n                 output_video_type: str = ".mp4",\n                 save_logs: bool = False) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:'Generate motif videos and save them to filesystem.\nFills in the values in the "motif_videos" key of the states.json file.\nFiles are saved at:'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["project_name/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["results/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["session/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["model_name/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["segmentation_algorithm-n_clusters/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["cluster_videos/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"session-motif_0.mp4"}),"\n",(0,i.jsx)(n.li,{children:"session-motif_1.mp4"}),"\n",(0,i.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"config"})," (",(0,i.jsx)(n.code,{children:"dict"}),"): Configuration parameters."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"segmentation_algorithm"})," (",(0,i.jsx)(n.code,{children:"SegmentationAlgorithms"}),"): Which segmentation algorithm to use. Options are 'hmm' or 'kmeans'."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"video_type"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),"): Type of video. Default is '.mp4'."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"output_video_type"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),"): Type of output video. Default is '.mp4'."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"save_logs"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Save logs to filesystem. Default is False."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"community_videos",children:"community_videos"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@save_state(model=CommunityVideosFunctionSchema)\ndef community_videos(config: dict,\n                     segmentation_algorithm: SegmentationAlgorithms,\n                     cohort: bool = True,\n                     video_type: str = ".mp4",\n                     save_logs: bool = False,\n                     output_video_type: str = ".mp4") -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:'Generate community videos and save them to filesystem on project community_videos folder.\nFills in the values in the "community_videos" key of the states.json file.\nFiles are saved at:'}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"If cohort is True:\nTODO: Add cohort analysis"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"If cohort is False:"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["project_name/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["results/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["file_name/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["model_name/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["segmentation_algorithm-n_clusters/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["community_videos/","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"file_name-community_0.mp4"}),"\n",(0,i.jsx)(n.li,{children:"file_name-community_1.mp4"}),"\n",(0,i.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"config"})," (",(0,i.jsx)(n.code,{children:"dict"}),"): Configuration parameters."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"segmentation_algorithm"})," (",(0,i.jsx)(n.code,{children:"SegmentationAlgorithms"}),"): Which segmentation algorithm to use. Options are 'hmm' or 'kmeans'."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"cohort"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Flag indicating cohort analysis. Defaults to True."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"video_type"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),"): Type of video. Default is '.mp4'."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"save_logs"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Save logs to filesystem. Default is False."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"output_video_type"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),"): Type of output video. Default is '.mp4'."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var i=s(6540);const o={},l=i.createContext(o);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);