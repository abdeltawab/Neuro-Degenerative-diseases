"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7148],{3175:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>a});var o=l(4848),s=l(8453);const t={sidebar_label:"evaluate",title:"model.evaluate"},r=void 0,i={id:"reference/model/evaluate",title:"model.evaluate",description:"logger\\_config",source:"@site/docs/reference/model/evaluate.md",sourceDirName:"reference/model",slug:"/reference/model/evaluate",permalink:"/VAME/docs/reference/model/evaluate",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"evaluate",title:"model.evaluate"},sidebar:"docsSidebar",previous:{title:"dataloader",permalink:"/VAME/docs/reference/model/dataloader"},next:{title:"rnn_model",permalink:"/VAME/docs/reference/model/rnn_model"}},d={},a=[{value:"logger_config",id:"logger_config",level:4},{value:"logger",id:"logger",level:4},{value:"use_gpu",id:"use_gpu",level:4},{value:"eval_temporal",id:"eval_temporal",level:4},{value:"evaluate_model",id:"evaluate_model",level:4}];function c(e){const n={code:"code",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h4,{id:"logger_config",children:"logger_config"}),"\n",(0,o.jsx)(n.h4,{id:"logger",children:"logger"}),"\n",(0,o.jsx)(n.h4,{id:"use_gpu",children:"use_gpu"}),"\n",(0,o.jsx)(n.h4,{id:"eval_temporal",children:"eval_temporal"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"def eval_temporal(cfg: dict,\n                  use_gpu: bool,\n                  model_name: str,\n                  fixed: bool,\n                  snapshot: Optional[str] = None,\n                  suffix: Optional[str] = None) -> None\n"})}),"\n",(0,o.jsx)(n.p,{children:"Evaluate the temporal aspects of the trained model."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"cfg"})," (",(0,o.jsx)(n.code,{children:"dict"}),"): Configuration dictionary."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"use_gpu"})," (",(0,o.jsx)(n.code,{children:"bool"}),"): Flag indicating whether to use GPU for evaluation."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"model_name"})," (",(0,o.jsx)(n.code,{children:"str"}),"): Name of the model."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"fixed"})," (",(0,o.jsx)(n.code,{children:"bool"}),"): Flag indicating whether the data is fixed or not."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"snapshot"})," (",(0,o.jsx)(n.code,{children:"str, optional"}),"): Path to the model snapshot. Defaults to None."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"suffix"})," (",(0,o.jsx)(n.code,{children:"str, optional"}),"): Suffix for the saved plot filename. Defaults to None."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"evaluate_model",children:"evaluate_model"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"@save_state(model=EvaluateModelFunctionSchema)\ndef evaluate_model(config: dict,\n                   use_snapshots: bool = False,\n                   save_logs: bool = False) -> None\n"})}),"\n",(0,o.jsx)(n.p,{children:'Evaluate the trained model.\nFills in the values in the "evaluate_model" key of the states.json file.\nSaves the evaluation results to:'}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["project_name/","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["model/","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"evaluate/"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"config"})," (",(0,o.jsx)(n.code,{children:"dict"}),"): Configuration dictionary."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"use_snapshots"})," (",(0,o.jsx)(n.code,{children:"bool, optional"}),"): Whether to plot for all snapshots or only the best model. Defaults to False."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"save_logs"})," (",(0,o.jsx)(n.code,{children:"bool, optional"}),"): Flag indicating whether to save logs. Defaults to False."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Returns"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"None"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>i});var o=l(6540);const s={},t=o.createContext(s);function r(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);