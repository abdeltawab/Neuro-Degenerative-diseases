"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6044],{8925:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});var s=r(4848),i=r(8453);const a={sidebar_label:"data_manipulation",title:"util.data_manipulation"},l=void 0,t={id:"reference/util/data_manipulation",title:"util.data_manipulation",description:"logger\\_config",source:"@site/docs/reference/util/data_manipulation.md",sourceDirName:"reference/util",slug:"/reference/util/data_manipulation",permalink:"/VAME/docs/reference/util/data_manipulation",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"data_manipulation",title:"util.data_manipulation"},sidebar:"docsSidebar",previous:{title:"csv_to_npy",permalink:"/VAME/docs/reference/util/csv_to_npy"},next:{title:"gif_pose_helper",permalink:"/VAME/docs/reference/util/gif_pose_helper"}},d={},c=[{value:"logger_config",id:"logger_config",level:4},{value:"logger",id:"logger",level:4},{value:"consecutive",id:"consecutive",level:4},{value:"nan_helper",id:"nan_helper",level:4},{value:"interpol_first_rows_nans",id:"interpol_first_rows_nans",level:4},{value:"interpolate_nans_with_pandas",id:"interpolate_nans_with_pandas",level:4},{value:"crop_and_flip_legacy",id:"crop_and_flip_legacy",level:4},{value:"background",id:"background",level:4}];function o(n){const e={code:"code",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h4,{id:"logger_config",children:"logger_config"}),"\n",(0,s.jsx)(e.h4,{id:"logger",children:"logger"}),"\n",(0,s.jsx)(e.h4,{id:"consecutive",children:"consecutive"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def consecutive(data: np.ndarray, stepsize: int = 1) -> List[np.ndarray]\n"})}),"\n",(0,s.jsx)(e.p,{children:"Find consecutive sequences in the data array."}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"data"})," (",(0,s.jsx)(e.code,{children:"np.ndarray"}),"): Input array."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"stepsize"})," (",(0,s.jsx)(e.code,{children:"int, optional"}),"): Step size. Defaults to 1."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Returns"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"List[np.ndarray]"}),": List of consecutive sequences."]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"nan_helper",children:"nan_helper"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def nan_helper(y: np.ndarray) -> Tuple\n"})}),"\n",(0,s.jsx)(e.p,{children:"Identifies indices of NaN values in an array and provides a function to convert them to non-NaN indices."}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"y"})," (",(0,s.jsx)(e.code,{children:"np.ndarray"}),"): Input array containing NaN values."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Returns"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"Tuple[np.ndarray, Union[np.ndarray, None]]"}),": A tuple containing two elements:"]}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"An array of boolean values indicating the positions of NaN values."}),"\n",(0,s.jsx)(e.li,{children:"A lambda function to convert NaN indices to non-NaN indices."}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"interpol_first_rows_nans",children:"interpol_first_rows_nans"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def interpol_first_rows_nans(arr: np.ndarray) -> np.ndarray\n"})}),"\n",(0,s.jsx)(e.p,{children:"Interpolates NaN values in the given array."}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"arr"})," (",(0,s.jsx)(e.code,{children:"np.ndarray"}),"): Input array with NaN values."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Returns"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"np.ndarray"}),": Array with interpolated NaN values."]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"interpolate_nans_with_pandas",children:"interpolate_nans_with_pandas"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def interpolate_nans_with_pandas(data: np.ndarray) -> np.ndarray\n"})}),"\n",(0,s.jsx)(e.p,{children:"Interpolate NaN values along the time axis of a 3D NumPy array using Pandas."}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"data"})," (",(0,s.jsx)(e.code,{children:"numpy.ndarray"}),"): Input 3D array of shape (time, keypoints, space)."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Returns"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"numpy.ndarray:"}),": Array with NaN values interpolated."]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"crop_and_flip_legacy",children:"crop_and_flip_legacy"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def crop_and_flip_legacy(\n        rect: Tuple, src: np.ndarray, points: List[np.ndarray],\n        ref_index: Tuple[int, int]) -> Tuple[np.ndarray, List[np.ndarray]]\n"})}),"\n",(0,s.jsx)(e.p,{children:"Crop and flip the image based on the given rectangle and points."}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"rect"})," (",(0,s.jsx)(e.code,{children:"Tuple"}),"): Rectangle coordinates (center, size, theta)."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"src: np.ndarray"}),": Source image."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"points"})," (",(0,s.jsx)(e.code,{children:"List[np.ndarray]"}),"): List of points."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"ref_index"})," (",(0,s.jsx)(e.code,{children:"Tuple[int, int]"}),"): Reference indices for alignment."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Returns"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"Tuple[np.ndarray, List[np.ndarray]]"}),": Cropped and flipped image, and shifted points."]}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"background",children:"background"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def background(project_path: str,\n               session: str,\n               video_path: str,\n               num_frames: int = 1000,\n               save_background: bool = True) -> np.ndarray\n"})}),"\n",(0,s.jsx)(e.p,{children:"Compute background image from fixed camera."}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Parameters"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"project_path"})," (",(0,s.jsx)(e.code,{children:"str"}),"): Path to the project directory."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"session"})," (",(0,s.jsx)(e.code,{children:"str"}),"): Name of the session."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"video_path"})," (",(0,s.jsx)(e.code,{children:"str"}),"): Path to the video file."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"num_frames"})," (",(0,s.jsx)(e.code,{children:"int, optional"}),"): Number of frames to use for background computation. Defaults to 1000."]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Returns"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"np.ndarray"}),": Background image."]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(o,{...n})}):o(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>l,x:()=>t});var s=r(6540);const i={},a=s.createContext(i);function l(n){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),s.createElement(a.Provider,{value:e},n.children)}}}]);