"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7955],{9064:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var i=s(4848),r=s(8453);const l={sidebar_label:"pipeline",title:"pipeline"},t=void 0,o={id:"reference/pipeline",title:"pipeline",description:"logger\\_config",source:"@site/docs/reference/pipeline.md",sourceDirName:"reference",slug:"/reference/pipeline",permalink:"/VAME/docs/reference/pipeline",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"pipeline",title:"pipeline"},sidebar:"docsSidebar",previous:{title:"rnn_vae",permalink:"/VAME/docs/reference/model/rnn_vae"},next:{title:"preprocessing",permalink:"/VAME/docs/reference/preprocessing/"}},d={},c=[{value:"logger_config",id:"logger_config",level:4},{value:"logger",id:"logger",level:4},{value:"VAMEPipeline Objects",id:"vamepipeline-objects",level:2},{value:"__init__",id:"__init__",level:4},{value:"get_states",id:"get_states",level:4},{value:"get_sessions",id:"get_sessions",level:4},{value:"get_raw_datasets",id:"get_raw_datasets",level:4},{value:"preprocessing",id:"preprocessing",level:4},{value:"create_training_set",id:"create_training_set",level:4},{value:"train_model",id:"train_model",level:4},{value:"evaluate_model",id:"evaluate_model",level:4},{value:"run_segmentation",id:"run_segmentation",level:4},{value:"run_community_clustering",id:"run_community_clustering",level:4},{value:"generate_motif_videos",id:"generate_motif_videos",level:4},{value:"generate_community_videos",id:"generate_community_videos",level:4},{value:"generate_videos",id:"generate_videos",level:4},{value:"visualize_preprocessing",id:"visualize_preprocessing",level:4},{value:"visualize_model_losses",id:"visualize_model_losses",level:4},{value:"visualize_motif_tree",id:"visualize_motif_tree",level:4},{value:"visualize_umap",id:"visualize_umap",level:4},{value:"report",id:"report",level:4},{value:"run_pipeline",id:"run_pipeline",level:4},{value:"unique_in_order",id:"unique_in_order",level:4}];function a(e){const n={code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h4,{id:"logger_config",children:"logger_config"}),"\n",(0,i.jsx)(n.h4,{id:"logger",children:"logger"}),"\n",(0,i.jsx)(n.h2,{id:"vamepipeline-objects",children:"VAMEPipeline Objects"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class VAMEPipeline()\n"})}),"\n",(0,i.jsx)(n.p,{children:"VAME pipeline class."}),"\n",(0,i.jsx)(n.h4,{id:"__init__",children:"__init__"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def __init__(project_name: str,\n             videos: List[str],\n             poses_estimations: List[str],\n             source_software: Literal["DeepLabCut", "SLEAP", "LightningPose"],\n             working_directory: str = ".",\n             video_type: str = ".mp4",\n             fps: int | None = None,\n             copy_videos: bool = False,\n             paths_to_pose_nwb_series_data: Optional[str] = None,\n             config_kwargs: Optional[dict] = None) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Initializes the VAME pipeline."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"project_name"})," (",(0,i.jsx)(n.code,{children:"str"}),"): Project name."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"videos"})," (",(0,i.jsx)(n.code,{children:"List[str]"}),"): List of video files."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"poses_estimations"})," (",(0,i.jsx)(n.code,{children:"List[str]"}),"): List of pose estimation files."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"source_software"})," (",(0,i.jsx)(n.code,{children:'Literal["DeepLabCut", "SLEAP", "LightningPose"]'}),"): Source software used for pose estimation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"working_directory"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),'): Working directory, by default ".".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"video_type"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),'): Video file type, by default ".mp4".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"fps"})," (",(0,i.jsx)(n.code,{children:"int, optional"}),"): Sampling rate of the videos. If not passed, it will be estimated from the video file. By default None."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"copy_videos"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Copy videos, by default False."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"paths_to_pose_nwb_series_data"})," (",(0,i.jsx)(n.code,{children:"Optional[str], optional"}),"): Path to pose NWB series data, by default None."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"config_kwargs"})," (",(0,i.jsx)(n.code,{children:"Optional[dict], optional"}),"): Additional configuration keyword arguments, by default None."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"get_states",children:"get_states"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def get_states(summary: bool = True) -> dict\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns the pipeline states."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dict"}),": Pipeline states."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"get_sessions",children:"get_sessions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def get_sessions() -> List[str]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns a list of session names."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"List[str]"}),": Session names."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"get_raw_datasets",children:"get_raw_datasets"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def get_raw_datasets() -> xr.Dataset\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns a xarray dataset which combines all the raw data from the project."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"dss"})," (",(0,i.jsx)(n.code,{children:"xarray.Dataset"}),"): Combined raw dataset."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"preprocessing",children:"preprocessing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def preprocessing(centered_reference_keypoint: str = "snout",\n                  orientation_reference_keypoint: str = "tailbase") -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Preprocesses the data."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"centered_reference_keypoint"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),'): Key point to center the data, by default "snout".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"orientation_reference_keypoint"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),'): Key point to orient the data, by default "tailbase".']}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"create_training_set",children:"create_training_set"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def create_training_set() -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Creates the training set."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"train_model",children:"train_model"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def train_model() -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Trains the model."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"evaluate_model",children:"evaluate_model"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def evaluate_model() -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Evaluates the model."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"run_segmentation",children:"run_segmentation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def run_segmentation() -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Runs the pose estimation segmentation into motifs."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"run_community_clustering",children:"run_community_clustering"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def run_community_clustering() -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Runs the community clustering."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"generate_motif_videos",children:"generate_motif_videos"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def generate_motif_videos(\n        video_type: str = ".mp4",\n        segmentation_algorithm: Literal["hmm", "kmeans"] = "hmm") -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Generates motif videos."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"video_type"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),'): Video type, by default ".mp4".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"segmentation_algorithm"})," (",(0,i.jsx)(n.code,{children:'Literal["hmm", "kmeans"], optional'}),'): Segmentation algorithm, by default "hmm".']}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"generate_community_videos",children:"generate_community_videos"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def generate_community_videos(\n        video_type: str = ".mp4",\n        segmentation_algorithm: Literal["hmm", "kmeans"] = "hmm") -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Generates community videos."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"video_type"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),'): Video type, by default ".mp4".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"segmentation_algorithm"})," (",(0,i.jsx)(n.code,{children:'Literal["hmm", "kmeans"], optional'}),'): Segmentation algorithm, by default "hmm".']}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"generate_videos",children:"generate_videos"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def generate_videos(\n        video_type: str = ".mp4",\n        segmentation_algorithm: Literal["hmm", "kmeans"] = "hmm") -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Generates motif and community videos."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"video_type"})," (",(0,i.jsx)(n.code,{children:"str, optional"}),'): Video type, by default ".mp4".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"segmentation_algorithm"})," (",(0,i.jsx)(n.code,{children:'Literal["hmm", "kmeans"], optional'}),'): Segmentation algorithm, by default "hmm".']}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"visualize_preprocessing",children:"visualize_preprocessing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def visualize_preprocessing(scatter: bool = True,\n                            timeseries: bool = True,\n                            show_figure: bool = False,\n                            save_to_file: bool = True) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Visualizes the preprocessing results."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"scatter"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Visualize scatter plot, by default True."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"timeseries"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Visualize timeseries plot, by default True."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"show_figure"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Show the figure, by default False."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"save_to_file"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Save the figure to file, by default True."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"visualize_model_losses",children:"visualize_model_losses"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def visualize_model_losses(save_to_file: bool = True,\n                           show_figure: bool = True) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Visualizes the model losses."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"save_to_file"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Save the figure to file, by default False."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"show_figure"})," (",(0,i.jsx)(n.code,{children:"bool, optional"}),"): Show the figure, by default True."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"visualize_motif_tree",children:"visualize_motif_tree"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def visualize_motif_tree(\n        segmentation_algorithm: Literal["hmm", "kmeans"]) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Visualizes the motif tree."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"segmentation_algorithm"})," (",(0,i.jsx)(n.code,{children:'Literal["hmm", "kmeans"]'}),"): Segmentation algorithm."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"visualize_umap",children:"visualize_umap"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def visualize_umap(label: Literal["community", "motif"] = "community",\n                   segmentation_algorithm: Literal["hmm", "kmeans"] = "hmm",\n                   show_figure: bool = False,\n                   save_to_file: bool = True) -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Visualizes the UMAP plot."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"label"})," (",(0,i.jsx)(n.code,{children:'Literal["community", "motif"], optional'}),'): Label to visualize, by default "community".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"segmentation_algorithm"})," (",(0,i.jsx)(n.code,{children:'Literal["hmm", "kmeans"], optional'}),'): Segmentation algorithm, by default "hmm".']}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"report",children:"report"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def report(segmentation_algorithm: Literal["hmm", "kmeans"] = "hmm") -> None\n'})}),"\n",(0,i.jsx)(n.p,{children:"Generates the project report."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"segmentation_algorithm"})," (",(0,i.jsx)(n.code,{children:'Literal["hmm", "kmeans"], optional'}),'): Segmentation algorithm, by default "hmm".']}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"run_pipeline",children:"run_pipeline"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def run_pipeline(from_step: int = 0, preprocessing_kwargs: dict = {}) -> None\n"})}),"\n",(0,i.jsx)(n.p,{children:"Runs the pipeline."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Parameters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"from_step"})," (",(0,i.jsx)(n.code,{children:"int, optional"}),"): Start from step, by default 0."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"preprocessing_kwargs"})," (",(0,i.jsx)(n.code,{children:"dict, optional"}),"): Preprocessing keyword arguments, by default ","."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Returns"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"None"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"unique_in_order",children:"unique_in_order"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def unique_in_order(sequence)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var i=s(6540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);